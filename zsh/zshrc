export UNAME="$(uname)"
if [[ $UNAME != "Linux" && $UNAME != "Darwin" ]]; then
  echo "panic: unknown UNAME system information"
  exit 1
fi

if [[ $UNAME == "Linux" ]]; then
  export ZSH=/usr/share/oh-my-zsh
elif [[ $UNAME == "Darwin" ]]; then
  export ZSH="$HOME/.oh-my-zsh"
fi

# https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="eastwood"

# CASE_SENSITIVE="true"
# HYPHEN_INSENSITIVE="true"
COMPLETION_WAITING_DOTS="true"
# ENABLE_CORRECTION="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"

if [[ $UNAME == "Linux" ]]; then
  # DISABLE_AUTO_UPDATE="true"
  # DISABLE_UPDATE_PROMPT="true"
  export UPDATE_ZSH_DAYS=7
elif [[ $UNAME == "Darwin" ]]; then
  zstyle ':omz:update' mode auto # ... | disabled | auto | reminder
  zstyle ':omz:update' frequency 7
fi

plugins=(git)

if [[ $UNAME == "Linux" ]]; then
  ZSH_CACHE_DIR=$HOME/.cache/oh-my-zsh
  if [[ ! -d $ZSH_CACHE_DIR ]]; then
    mkdir $ZSH_CACHE_DIR
  fi
fi

source $ZSH/oh-my-zsh.sh
PATH="$HOME/.local/bin:$PATH"

export EDITOR=nvim

alias v="nvim"
alias vi="nvim"
alias vim="nvim"
alias todo="nvim ~/_zone/todo.txt"

alias ls="exa"
alias l="ls -l"
alias la="ls -la"

alias pm="pulsemixer"
# pulsemixer default
pmd() { pulsemixer --list-sinks | grep -i speaker | awk '{print $3}' | sed s/,// | xargs pulsemixer --set-default-sink --id }
# pulsemixer headphones
pmh() { pulsemixer --list-sinks | grep -i 458bt | awk '{print $3}' | sed s/,// | xargs pulsemixer --set-default-sink --id }

alias cdx="cd ~/_dev"
alias cdz="cd ~/_zone"
alias cdd="cd ~/_dotfiles"

alias srczsh="source ~/.zshrc"
alias cfgzsh="(cd ~ && nvim .zshrc)"
alias cfggit="(cd ~ && nvim .gitconfig)"
alias cfgvim="(cd ~/.config/nvim && nvim .)"
alias cfgawm="(cd ~/.config/awesome && nvim rc.lua)"

alias lg="lazygit"

alias yarnx="yarn $@ && git config --unset core.hooksPath && echo hooks uninstalled"

_iphone_mount() {
  if [[ ! -d /run/media/iphone ]]; then
    sudo mkdir -p /run/media/iphone
    sudo chown -R $USER /run/media/iphone
  fi
  ifuse /run/media/iphone
}

alias iphone-mount="_iphone_mount"
alias iphone-umount="fusermount -u /run/media/iphone"

if [[ $UNAME == "Linux" ]]; then
  # https://aur.archlinux.org/packages/nvm#comment-764001
  source /usr/share/nvm/init-nvm.sh
elif [[ $UNAME == "Darwin" ]]; then
  export NVM_DIR="$HOME/.nvm"
  NVM_DEFAULT="v18"
  NVM_DEFAULT_VERSION="$(ls -l $NVM_DIR/versions/node | grep $NVM_DEFAULT | awk '{ print $7 }')"
  if [[ -n "$NVM_DEFAULT_VERSION" ]]; then
    # add default version to path
    PATH="$NVM_DIR/versions/node/$NVM_DEFAULT_VERSION/bin:$PATH"
  else
    echo "warning(nvm): NVM_DEFAULT=$NVM_DEFAULT -> node version not installed!"
  fi
  # lazy load nvm (because it's so slow to init...)
  lazy_load_nvm() {
    unset -f nvm
    [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"
    # [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"
  }
  nvm() {
    lazy_load_nvm
    nvm $@
  }
fi

autoload -U add-zsh-hook
load-nvmrc() {
  if [[ -f .nvmrc && -r .nvmrc ]]; then
    nvm use
  fi
}
load-nvmrc
add-zsh-hook chpwd load-nvmrc

# docker-destroy-containers
function ddc() {
  docker ps -aq | xargs docker rm -f
}

# docker-destroy-untagged-images
function ddui() {
  docker image ls | grep '<none>' | awk '{print $3}' | xargs docker rmi -f
}

function deport() {
  TARGET_PORT=$1
  TARGET_PID="$(lsof -i:$TARGET_PORT -t)"
  if [[ -z "$TARGET_PID" ]]; then
    echo "no process on port $TARGET_PORT"
  else
    echo $TARGET_PID | xargs kill
    echo $TARGET_PID | xargs echo
  fi
}

alias dslr-mount="sudo modprobe v4l2loopback exclusive_caps=1 max_buffers=2"
alias dslr-unmount="sudo rmmod v4l2loopback"

alias dslr-ls="ls /dev/video*"
alias dslr-gls="gphoto2 --abilities"

function dslr_stream() {
  # use first arg
  TARGET="$1"
  # if first arg empty, default to last device
  if [[ -z "$1" ]]; then
    TARGET=$(ls -1 /dev/video* | awk 'BEGIN{ RS = "" ; FS = "\n" }{print $NF}')
    echo $TARGET
  fi
  # gphoto output | stream to encoder | stream to device
  gphoto2 --stdout --capture-movie | ffmpeg -i - -vcodec rawvideo -pix_fmt yuv420p -threads 0 -f v4l2 $TARGET
}
alias dslr-stream="dslr_stream"
